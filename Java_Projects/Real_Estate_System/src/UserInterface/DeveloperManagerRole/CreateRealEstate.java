/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DeveloperManagerRole;

import Business.Construction.Construction;
import Business.Data.Databank;
import Business.Enterprise.Developer;
import Business.Realestate.Floor;
import Business.Realestate.RealEstate;
import Business.Realestate.RealEstate.RealEstateType;
import Business.Realestate.Room;
import Business.Rssystem;
import java.awt.CardLayout;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruby
 */
public class CreateRealEstate extends javax.swing.JPanel {

    /**
     * Creates new form CreateRealEstate
     */
    private JPanel p;
    private Rssystem b;
    private Developer d;
    
    CreateRealEstate(JPanel p, Developer e, Rssystem b) {
        initComponents();
        this.p = p;
        this.b = b;
        this.d = e;
        populatetbl1();
        populatetbl2();
    }
    
    public void populatetbl1(){
        DefaultTableModel dtm = (DefaultTableModel)tbl1.getModel();
        dtm.setRowCount(0);
        for(Construction co : d.getConstructionlist()){
            
            Object row[] = new Object[4];
            row[0] = co;
            row[1] = co.getID();
            row[2] = co.getAddress();
            row[3] = co.getArea();
            dtm.addRow(row);
        }
    }
    
    public void populatetbl2(){
        DefaultTableModel dtm = (DefaultTableModel)tbl2.getModel();
        dtm.setRowCount(0);
        for(RealEstate re : d.getRealestatelist()){
            Object row[] = new Object[5];
            row[0] = re.getConstruction().getName();
            row[1] = re;
            row[2] = re.getFloorlist().size();
            row[3] = re.getFloorlist().get(0).getRoomlist().size();
            row[4] = re.getFloorlist().get(0).getRoomlist().get(0).getRoomarea();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        s1 = new javax.swing.JSpinner();
        s2 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        editbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox<>();
        viewbtn = new javax.swing.JButton();
        uploadbtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(68, 75, 92));

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Construction Name", "ID", "Address", "Construction Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl1);

        jLabel1.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage RealEstate");

        backbtn.setBackground(new java.awt.Color(128, 209, 196));
        backbtn.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        backbtn.setForeground(new java.awt.Color(255, 255, 255));
        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Floor Number");

        jLabel3.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Room Number/Floor");

        s1.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        s1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 99, 1));
        s1.setEnabled(false);

        s2.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        s2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 99, 1));
        s2.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Each Room Area");

        t1.setEnabled(false);

        editbtn.setBackground(new java.awt.Color(128, 209, 196));
        editbtn.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        editbtn.setForeground(new java.awt.Color(255, 255, 255));
        editbtn.setText("Create/Edit Real Estate");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(128, 209, 196));
        deletebtn.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("Delete Real Estate");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        savebtn.setBackground(new java.awt.Color(128, 209, 196));
        savebtn.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        savebtn.setForeground(new java.awt.Color(255, 255, 255));
        savebtn.setText("Save");
        savebtn.setEnabled(false);
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });

        tbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Real Estate Name", "ID", "Floors", "Rooms/Floor", "Each Room Area"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl2);

        jLabel5.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RealEstate Type");

        cb1.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        cb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Residence", "Public" }));
        cb1.setEnabled(false);

        viewbtn.setBackground(new java.awt.Color(128, 209, 196));
        viewbtn.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        viewbtn.setForeground(new java.awt.Color(255, 255, 255));
        viewbtn.setText("View Detail");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        uploadbtn.setBackground(new java.awt.Color(128, 209, 196));
        uploadbtn.setFont(new java.awt.Font("方正兰亭黑_GB18030", 1, 24)); // NOI18N
        uploadbtn.setForeground(new java.awt.Color(255, 255, 255));
        uploadbtn.setText("Upload Image");
        uploadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(211, 211, 211)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uploadbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(viewbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(editbtn, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(deletebtn))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(199, 199, 199)
                                .addComponent(jLabel3)))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(savebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 409, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backbtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(s1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editbtn)
                    .addComponent(deletebtn)
                    .addComponent(savebtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewbtn)
                    .addComponent(uploadbtn))
                .addContainerGap(187, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        p.remove(this);
        CardLayout layout =(CardLayout) p.getLayout();
        layout.previous(p);
    }//GEN-LAST:event_backbtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        // TODO add your handling code here:
        int selectedrow= tbl1.getSelectedRow();
        Construction c = (Construction)tbl1.getValueAt(selectedrow,0);
        Scanner sc = new Scanner(t1.getText());
        if(sc.hasNextDouble()){
            int fn = (Integer)s1.getValue();
            int rn = (Integer)s2.getValue();
            if((double)(fn*rn)*Double.parseDouble(t1.getText())<c.getArea()){
                RealEstate r = new RealEstate(d, RealEstateType.valueOf((String)cb1.getSelectedItem()),c);
                r.setId(c.getID());
                r.setArea(c.getArea());
                r.setAddress(c.getAddress());
                for(int i=0; i<(Integer)s1.getValue();i++){
                    Floor f = new Floor();
                    f.setFloornum(i+1);
                    for(int j=0; j<(Integer)s2.getValue(); j++){
                        Room rm = new Room();
                        rm.setRoomid((i+1)*100+j+1);
                        rm.setRoomarea(Double.parseDouble(t1.getText()));
                        f.getRoomlist().add(rm);
                    }
                    r.getFloorlist().add(f);
                }
                c.setRealestate(r);
                d.getRealestatelist().add(r);
                populatetbl2();
                Databank.getInstance().storeSystem(b);
            }else{
                JOptionPane.showMessageDialog(null,"Inputs Exceeds The Area Limitation Of Construction");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Invalid Inputs");
        }
        s1.setEnabled(false);
        s2.setEnabled(false);
        t1.setEnabled(false);
        cb1.setEnabled(false);
        editbtn.setEnabled(true);
        deletebtn.setEnabled(true);
        savebtn.setEnabled(false);     
    }//GEN-LAST:event_savebtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
        // TODO add your handling code here:
        int selectedrow= tbl1.getSelectedRow();
        if(selectedrow >=0){
            Construction c = (Construction)tbl1.getValueAt(selectedrow,0);
            d.getRealestatelist().remove(d.findRealEstate(c.getID()));
            s1.setEnabled(true);
            s2.setEnabled(true);
            t1.setEnabled(true);
            cb1.setEnabled(true);
            editbtn.setEnabled(false);
            deletebtn.setEnabled(false);
            savebtn.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null,"Please Select Any Row");
        }
    }//GEN-LAST:event_editbtnActionPerformed

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        // TODO add your handling code here:
        int selectedrow= tbl2.getSelectedRow();
        
        if(selectedrow >=0){
            RealEstate re = (RealEstate)tbl2.getValueAt(selectedrow,1);
            d.getRealestatelist().remove(re);
            populatetbl2();
            Databank.getInstance().storeSystem(b);
        }else{
            JOptionPane.showMessageDialog(null,"Please Select Any Row");
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        // TODO add your handling code here:
        int selectedrow= tbl2.getSelectedRow();
        if(selectedrow >=0){
            RealEstate re = (RealEstate)tbl2.getValueAt(selectedrow,1);
            ViewRealEstateDetail panel = new ViewRealEstateDetail(p,b,re);
            p.add("ViewRealEstateDetail", panel);
            CardLayout layout = (CardLayout) p.getLayout();
            layout.next(p);
        }else{
            JOptionPane.showMessageDialog(null,"Please Select Any Row");
        }
    }//GEN-LAST:event_viewbtnActionPerformed

    private void uploadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadbtnActionPerformed
        // TODO add your handling code here:
        int selectedrow= tbl2.getSelectedRow();
        if(selectedrow >=0){
            RealEstate re = (RealEstate)tbl2.getValueAt(selectedrow,1);
            JFileChooser filechooser= new JFileChooser();
            filechooser.setDialogTitle("Choose Your File");
            filechooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            int returnval=filechooser.showOpenDialog(this);
            if(returnval==JFileChooser.APPROVE_OPTION){
                File file = filechooser.getSelectedFile();
                BufferedImage img;
                try{   
                    img=ImageIO.read(file);
                    re.getRealestateimglist().add(img);
                    Databank.getInstance().storeSystem(b);
                }
                catch(IOException e){}
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please Select Any Row");
        }
    }//GEN-LAST:event_uploadbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner s1;
    private javax.swing.JSpinner s2;
    private javax.swing.JButton savebtn;
    private javax.swing.JTextField t1;
    private javax.swing.JTable tbl1;
    private javax.swing.JTable tbl2;
    private javax.swing.JButton uploadbtn;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables
}
